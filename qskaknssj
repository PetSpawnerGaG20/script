local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
Name = "ðŸ¥ŠSlap BattlesðŸ¥Š",
Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
LoadingTitle = "NyoaScriptsHub",
LoadingSubtitle = "By Slivkineepy",
ShowText = "Nyoa", -- for mobile users to unhide rayfield, change if you'd like
Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

DisableRayfieldPrompts = false,
DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

ConfigurationSaving = {
Enabled = true,
FolderName = nil, -- Create a custom folder for your hub/game
FileName = "NyoaScriptsHub"
},

Discord = {
Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
Invite = "https://discord.gg/ZX6yueccrr", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
RememberJoins = false -- Set this to false to make them join the discord every time they load it up
},

KeySystem = true, -- Set this to true to use our key system
KeySettings = {
Title = "Grow a garden|key",
Subtitle = "Key in discord server",
Note = "Join server for key", -- Use this to tell the user how to get a key
FileName = "NyoaHubKey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
Key = {"https://pastebin.com/raw/hMbvbNrn"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
}
})

local MainTab = Window:CreateTab("ðŸ‘¤ Scripts", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
Title = "Script executed",
Content = "NyoaScripts Hub",
Duration = 5,
Image = nil,
})

local Button = MainTab:CreateButton({
Name = "Infinite Jump",
Callback = function()
-- Infinite Jump Script
local Player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

UserInputService.JumpRequest:Connect(function()
if Player.Character and Player.Character:FindFirstChild("Humanoid") then
Player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
end
end)
end,
})

local Slider = MainTab:CreateSlider({
Name = "WalkSpeed",
Range = {0, 500},
Increment = 1,
Suffix = "Speed",
CurrentValue = 16,
Flag = "NyoaScripts1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
Callback = function(Value)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
end,
})
local Slider = MainTab:CreateSlider({
Name = "JumpPower",
Range = {0, 300},
Increment = 11,
Suffix = "Jump",
CurrentValue = 15,
Flag = "NyoaScripts2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
Callback = function(Value)
game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
end,
})

local Button = MainTab:CreateButton({
Name = "Fly",
Callback = function()
local main = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local up = Instance.new("TextButton")
local down = Instance.new("TextButton")
local onof = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local plus = Instance.new("TextButton")
local speed = Instance.new("TextLabel")
local mine = Instance.new("TextButton")
local closebutton = Instance.new("TextButton")
local mini = Instance.new("TextButton")
local mini2 = Instance.new("TextButton")

main.Name = "main"
main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
main.ResetOnSpawn = false

Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(163, 255, 137)
Frame.BorderColor3 = Color3.fromRGB(103, 221, 213)
Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)
Frame.Size = UDim2.new(0, 190, 0, 57)

up.Name = "up"
up.Parent = Frame
up.BackgroundColor3 = Color3.fromRGB(79, 255, 152)
up.Size = UDim2.new(0, 44, 0, 28)
up.Font = Enum.Font.SourceSans
up.Text = "UP"
up.TextColor3 = Color3.fromRGB(0, 0, 0)
up.TextSize = 14.000

down.Name = "down"
down.Parent = Frame
down.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
down.Position = UDim2.new(0, 0, 0.491228074, 0)
down.Size = UDim2.new(0, 44, 0, 28)
down.Font = Enum.Font.SourceSans
down.Text = "DOWN"
down.TextColor3 = Color3.fromRGB(0, 0, 0)
down.TextSize = 14.000

onof.Name = "onof"
onof.Parent = Frame
onof.BackgroundColor3 = Color3.fromRGB(255, 249, 74)
onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)
onof.Size = UDim2.new(0, 56, 0, 28)
onof.Font = Enum.Font.SourceSans
onof.Text = "fly"
onof.TextColor3 = Color3.fromRGB(0, 0, 0)
onof.TextSize = 14.000

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(242, 60, 255)
TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 100, 0, 28)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "FLY GUI"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

plus.Name = "plus"
plus.Parent = Frame
plus.BackgroundColor3 = Color3.fromRGB(133, 145, 255)
plus.Position = UDim2.new(0.231578946, 0, 0, 0)
plus.Size = UDim2.new(0, 45, 0, 28)
plus.Font = Enum.Font.SourceSans
plus.Text = "+"
plus.TextColor3 = Color3.fromRGB(0, 0, 0)
plus.TextScaled = true
plus.TextSize = 14.000
plus.TextWrapped = true

speed.Name = "speed"
speed.Parent = Frame
speed.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)
speed.Size = UDim2.new(0, 44, 0, 28)
speed.Font = Enum.Font.SourceSans
speed.Text = "1"
speed.TextColor3 = Color3.fromRGB(0, 0, 0)
speed.TextScaled = true
speed.TextSize = 14.000
speed.TextWrapped = true

mine.Name = "mine"
mine.Parent = Frame
mine.BackgroundColor3 = Color3.fromRGB(123, 255, 247)
mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)
mine.Size = UDim2.new(0, 45, 0, 29)
mine.Font = Enum.Font.SourceSans
mine.Text = "-"
mine.TextColor3 = Color3.fromRGB(0, 0, 0)
mine.TextScaled = true
mine.TextSize = 14.000
mine.TextWrapped = true

closebutton.Name = "Close"
closebutton.Parent = main.Frame
closebutton.BackgroundColor3 = Color3.fromRGB(225, 25, 0)
closebutton.Font = "SourceSans"
closebutton.Size = UDim2.new(0, 45, 0, 28)
closebutton.Text = "X"
closebutton.TextSize = 30
closebutton.Position =  UDim2.new(0, 0, -1, 27)

mini.Name = "minimize"
mini.Parent = main.Frame
mini.BackgroundColor3 = Color3.fromRGB(192, 150, 230)
mini.Font = "SourceSans"
mini.Size = UDim2.new(0, 45, 0, 28)
mini.Text = "-"
mini.TextSize = 40
mini.Position = UDim2.new(0, 44, -1, 27)

mini2.Name = "minimize2"
mini2.Parent = main.Frame
mini2.BackgroundColor3 = Color3.fromRGB(192, 150, 230)
mini2.Font = "SourceSans"
mini2.Size = UDim2.new(0, 45, 0, 28)
mini2.Text = "+"
mini2.TextSize = 40
mini2.Position = UDim2.new(0, 44, -1, 57)
mini2.Visible = false

speeds = 1

local speaker = game:GetService("Players").LocalPlayer

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

nowe = false

game:GetService("StarterGui"):SetCore("SendNotification", {
Title = "FLY GUI";
Text = "BY SLIVKINEEPY";
Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
Duration = 5;

Frame.Active = true -- main = gui
Frame.Draggable = true

onof.MouseButton1Down:connect(function()

if nowe == true then  
	nowe = false  

	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)  
	speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)  
else   
	nowe = true  



	for i = 1, speeds do  
		spawn(function()  

			local hb = game:GetService("RunService").Heartbeat	  


			tpwalking = true  
			local chr = game.Players.LocalPlayer.Character  
			local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")  
			while tpwalking and hb:Wait() and chr and hum and hum.Parent do  
				if hum.MoveDirection.Magnitude > 0 then  
					chr:TranslateBy(hum.MoveDirection)  
				end  
			end  

		end)  
	end  
	game.Players.LocalPlayer.Character.Animate.Disabled = true  
	local Char = game.Players.LocalPlayer.Character  
	local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")  

	for i,v in next, Hum:GetPlayingAnimationTracks() do  
		v:AdjustSpeed(0)  
	end  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)  
	speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)  
	speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)  
end  




if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then  



	local plr = game.Players.LocalPlayer  
	local torso = plr.Character.Torso  
	local flying = true  
	local deb = true  
	local ctrl = {f = 0, b = 0, l = 0, r = 0}  
	local lastctrl = {f = 0, b = 0, l = 0, r = 0}  
	local maxspeed = 50  
	local speed = 0  


	local bg = Instance.new("BodyGyro", torso)  
	bg.P = 9e4  
	bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)  
	bg.cframe = torso.CFrame  
	local bv = Instance.new("BodyVelocity", torso)  
	bv.velocity = Vector3.new(0,0.1,0)  
	bv.maxForce = Vector3.new(9e9, 9e9, 9e9)  
	if nowe == true then  
		plr.Character.Humanoid.PlatformStand = true  
	end  
	while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do  
		game:GetService("RunService").RenderStepped:Wait()  

		if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then  
			speed = speed+.5+(speed/maxspeed)  
			if speed > maxspeed then  
				speed = maxspeed  
			end  
		elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then  
			speed = speed-1  
			if speed < 0 then  
				speed = 0  
			end  
		end  
		if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then  
			bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed  
			lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}  
		elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then  
			bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed  
		else  
			bv.velocity = Vector3.new(0,0,0)  
		end  
		--	game.Players.LocalPlayer.Character.Animate.Disabled = true  
		bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)  
	end  
	ctrl = {f = 0, b = 0, l = 0, r = 0}  
	lastctrl = {f = 0, b = 0, l = 0, r = 0}  
	speed = 0  
	bg:Destroy()  
	bv:Destroy()  
	plr.Character.Humanoid.PlatformStand = false  
	game.Players.LocalPlayer.Character.Animate.Disabled = false  
	tpwalking = false  




else  
	local plr = game.Players.LocalPlayer  
	local UpperTorso = plr.Character.UpperTorso  
	local flying = true  
	local deb = true  
	local ctrl = {f = 0, b = 0, l = 0, r = 0}  
	local lastctrl = {f = 0, b = 0, l = 0, r = 0}  
	local maxspeed = 50  
	local speed = 0  


	local bg = Instance.new("BodyGyro", UpperTorso)  
	bg.P = 9e4  
	bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)  
	bg.cframe = UpperTorso.CFrame  
	local bv = Instance.new("BodyVelocity", UpperTorso)  
	bv.velocity = Vector3.new(0,0.1,0)  
	bv.maxForce = Vector3.new(9e9, 9e9, 9e9)  
	if nowe == true then  
		plr.Character.Humanoid.PlatformStand = true  
	end  
	while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do  
		wait()  

		if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then  
			speed = speed+.5+(speed/maxspeed)  
			if speed > maxspeed then  
				speed = maxspeed  
			end  
		elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then  
			speed = speed-1  
			if speed < 0 then  
				speed = 0  
			end  
		end  
		if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then  
			bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed  
			lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}  
		elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then  
			bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed  
		else  
			bv.velocity = Vector3.new(0,0,0)  
		end  

		bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)  
	end  
	ctrl = {f = 0, b = 0, l = 0, r = 0}  
	lastctrl = {f = 0, b = 0, l = 0, r = 0}  
	speed = 0  
	bg:Destroy()  
	bv:Destroy()  
	plr.Character.Humanoid.PlatformStand = false  
	game.Players.LocalPlayer.Character.Animate.Disabled = false  
	tpwalking = false  



end

end)

local tis

up.MouseButton1Down:connect(function()
tis = up.MouseEnter:connect(function()
while tis do
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1,0)
end
end)
end)

up.MouseLeave:connect(function()
if tis then
tis:Disconnect()
tis = nil
end
end)

local dis

down.MouseButton1Down:connect(function()
dis = down.MouseEnter:connect(function()
while dis do
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-1,0)
end
end)
end)

down.MouseLeave:connect(function()
if dis then
dis:Disconnect()
dis = nil
end
end)

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
wait(0.7)
game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
game.Players.LocalPlayer.Character.Animate.Disabled = false

end)

plus.MouseButton1Down:connect(function()
speeds = speeds + 1
speed.Text = speeds
if nowe == true then

tpwalking = false  
	for i = 1, speeds do  
		spawn(function()  

			local hb = game:GetService("RunService").Heartbeat	  


			tpwalking = true  
			local chr = game.Players.LocalPlayer.Character  
			local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")  
			while tpwalking and hb:Wait() and chr and hum and hum.Parent do  
				if hum.MoveDirection.Magnitude > 0 then  
					chr:TranslateBy(hum.MoveDirection)  
				end  
			end  

		end)  
	end  
end

end)
mine.MouseButton1Down:connect(function()
if speeds == 1 then
speed.Text = 'cannot be less than 1'
wait(1)
speed.Text = speeds
else
speeds = speeds - 1
speed.Text = speeds
if nowe == true then
tpwalking = false
for i = 1, speeds do
spawn(function()

local hb = game:GetService("RunService").Heartbeat	  


				tpwalking = true  
				local chr = game.Players.LocalPlayer.Character  
				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")  
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do  
					if hum.MoveDirection.Magnitude > 0 then  
						chr:TranslateBy(hum.MoveDirection)  
					end  
				end  

			end)  
		end  
	end  
end

end)

closebutton.MouseButton1Click:Connect(function()
main:Destroy()
end)

mini.MouseButton1Click:Connect(function()
up.Visible = false
down.Visible = false
onof.Visible = false
plus.Visible = false
speed.Visible = false
mine.Visible = false
mini.Visible = false
mini2.Visible = true
main.Frame.BackgroundTransparency = 1
closebutton.Position =  UDim2.new(0, 0, -1, 57)
end)

mini2.MouseButton1Click:Connect(function()
up.Visible = true
down.Visible = true
onof.Visible = true
plus.Visible = true
speed.Visible = true
mine.Visible = true
mini.Visible = true
mini2.Visible = false
main.Frame.BackgroundTransparency = 0
closebutton.Position =  UDim2.new(0, 0, -1, 27)
end)
end,
})

Local Toggle = MainTab:CreateToggle({
   Name = "Slap Aura",
   CurrentValue = false,
   Flag = "SlapAura1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local LocalPlayer = Players.LocalPlayer

local maxDistance = 30

getgenv().auraEnabled = not getgenv().auraEnabled

local function findTool()
	local tool = LocalPlayer.Backpack:FindFirstChildOfClass('Tool')

	if not tool then
		local character = LocalPlayer.Character

		if character then
			tool = character:FindFirstChildOfClass('Tool')
		end
	end

	return tool
end

local function getToolHitRemote()
	local tool = findTool()

	if tool and tool ~= getgenv().lastTool then
		getgenv().lastTool = tool

		local scr = tool:FindFirstChild('LocalScript')

		if scr then
			for _, o in pairs(getgc()) do
				if type(o) == 'function' and getfenv(o).script == scr then
					local c = debug.getconstants(o)
					
					for _, p in pairs(c) do
						if p == 'isInArena' then
							for _, p2 in pairs(c) do
								for _, j in pairs(ReplicatedStorage:GetChildren()) do
									if j:IsA('RemoteEvent') and j.Name == p2 then
										getgenv().hitRemote = j
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

while getgenv().auraEnabled do
	getToolHitRemote()

	if getgenv().hitRemote then
		for _, plr in pairs(Players:GetPlayers()) do
			if plr ~= LocalPlayer then
				local char = plr.Character

				if char then
					local part = char:FindFirstChildWhichIsA('BasePart')

					if LocalPlayer:DistanceFromCharacter(part.Position) <= maxDistance then
						hitRemote:FireServer(part)
					end
				end
			end
		end
	end

	wait()
            end
   end,
})

local Button = MainTab:CreateButton({
   Name = "AllBadge-Incognito",
   Callback = function()
        loadstring(game:HttpGet("https://[Log in to view URL]", true))()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "AntiRagdoll",
   CurrentValue = false,
   Flag = "AntiRagdoll1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        spawn(function()
    while game:GetService("RunService").Heartbeat:Wait() do
        local chr = game.Players.LocalPlayer.Character

        for _,v in pairs(chr:GetChildren()) do
            if v:IsA("BallSocketConstraint") or v:IsA("HingeConstraint") or v.Name == "Controls" or v.Name == "Local Ragdoll" or v.Name == "State Handler" or v.Name == "FirstPerson" or v.Name == "FakeAdmin" then
                v:Destroy()
            end
        end
    end
end)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Esp-Xray",
   Callback = function()
        local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CustomXRayGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 150)
frame.Position = UDim2.new(0.5, -100, 0.5, -75)
frame.BackgroundTransparency = 0.5
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.Active = true
frame.Visible = false
frame.Parent = screenGui

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 25, 0, 25)
closeButton.Position = UDim2.new(1, -30, 0, 5)
closeButton.BackgroundColor3 = Color3.new(1, 0, 0)
closeButton.Text = "X"
closeButton.TextScaled = true
closeButton.Parent = frame

local xrayButton = Instance.new("TextButton")
xrayButton.Size = UDim2.new(0, 180, 0, 40)
xrayButton.Position = UDim2.new(0, 10, 0, 40)
xrayButton.BackgroundColor3 = Color3.new(1, 0, 0)
xrayButton.Text = "Enable X-Ray"
xrayButton.Parent = frame

local disableXrayButton = Instance.new("TextButton")
disableXrayButton.Size = UDim2.new(0, 180, 0, 40)
disableXrayButton.Position = UDim2.new(0, 10, 0, 90)
disableXrayButton.BackgroundColor3 = Color3.new(0, 1, 0)
disableXrayButton.Text = "Disable X-Ray"
disableXrayButton.Visible = false
disableXrayButton.Parent = frame

local toggleGuiButton = Instance.new("TextButton")
toggleGuiButton.Size = UDim2.new(0, 100, 0, 50)
toggleGuiButton.Position = UDim2.new(0, 10, 0, 10)
toggleGuiButton.BackgroundColor3 = Color3.new(0, 1, 0)
toggleGuiButton.Text = "Open GUI"
toggleGuiButton.Active = true
toggleGuiButton.Parent = screenGui

local dragging = false
local dragStart, startPos

toggleGuiButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = toggleGuiButton.Position
    end
end)

toggleGuiButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType.MouseButton1 or input.UserInputType.Touch then
        if dragging then
            local delta = input.Position - dragStart
            toggleGuiButton.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

local highlights = {}

local function highlightPlayers()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local character = player.Character
            if character and not character:FindFirstChildOfClass("Highlight") then
                local highlight = Instance.new("Highlight")
                highlight.Adornee = character
                highlight.FillTransparency = 1
                highlight.OutlineTransparency = 0
                highlight.OutlineColor = Color3.new(1, 0, 0)
                highlight.Parent = character
                table.insert(highlights, highlight)
            end
        end
    end
end

local function removeHighlights()
    for _, highlight in pairs(highlights) do
        if highlight then
            highlight:Destroy()
        end
    end
    highlights = {}
end

local function toggleGui()
    frame.Visible = not frame.Visible
    if frame.Visible then
        toggleGuiButton.Text = "Close GUI"
    else
        toggleGuiButton.Text = "Open GUI"
    end
end

xrayButton.MouseButton1Click:Connect(function()
    highlightPlayers()
    xrayButton.Visible = false
    disableXrayButton.Visible = true
end)

disableXrayButton.MouseButton1Click:Connect(function()
    removeHighlights()
    xrayButton.Visible = true
    disableXrayButton.Visible = false
end)

toggleGuiButton.MouseButton1Click:Connect(toggleGui)

closeButton.MouseButton1Click:Connect(function()
    removeHighlights()
    screenGui:Destroy()
end)
   end,
})
