Not to be stolen! Not for use
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "99 Nights in the Forest",
    LoadingTitle = "By Slivkineepy",
    LoadingSubtitle = "Waiting",
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UIS = game:GetService("UserInputService")

-- ===== 1. PLAYER TAB =====
local PlayerTab = Window:CreateTab("ðŸŒ² Player")

PlayerTab:CreateButton({
    Name = "Infinite Jump",
    Callback = function()
        game:GetService("UserInputService").JumpRequest:Connect(function()
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    end
})

PlayerTab:CreateSlider({
    Name = "Walkspeed",
    Range = {0, 300},
    Increment = 1,
    CurrentValue = 16,
    Callback = function(val)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = val
        end
    end
})

PlayerTab:CreateInput({
    Name = "Jump Power",
    CurrentValue = "15",
    PlaceholderText = "1-300",
    Callback = function(txt)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = tonumber(txt)
        end
    end
})

PlayerTab:CreateButton({
    Name = "Fly Gui",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/PetSpawnerGaG20/script/refs/heads/main/Fly"))()
    end
})

-- ===== 2. AUTOMATION TAB =====
local AutomationTab = Window:CreateTab("ðŸŒ² Automation")

-- Inf Hunger
local infHungerActive = false
AutomationTab:CreateToggle({
    Name = "Inf Hunger",
    CurrentValue = false,
    Callback = function(state)
        infHungerActive = state
        if state then
            task.spawn(function()
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local RequestConsumeItem = ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("RequestConsumeItem")
                while infHungerActive do
                    pcall(function()
                        RequestConsumeItem:InvokeServer(Instance.new("Model"))
                    end)
                    task.wait(1)
                end
            end)
        end
    end
})

-- Auto Tree Farm
local autoTreeFarmActive = false
AutomationTab:CreateToggle({
    Name = "Auto Tree Farm",
    CurrentValue = false,
    Callback = function(state)
        autoTreeFarmActive = state
        if state then
            task.spawn(function()
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local ToolDamageObject = ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("ToolDamageObject")

                local function getAllTrees()
                    local map = workspace:FindFirstChild("Map")
                    if not map then return {} end
                    local foliage = map:FindFirstChild("Foliage") or map:FindFirstChild("Landmarks")
                    if not foliage then return {} end
                    local trees = {}
                    for _, t in ipairs(foliage:GetChildren()) do
                        if t.Name == "Small Tree" and t:IsA("Model") and t.Parent then
                            local trunk = t:FindFirstChild("Trunk") or t.PrimaryPart
                            if trunk then
                                table.insert(trees, {tree=t, trunk=trunk})
                            end
                        end
                    end
                    return trees
                end

                local function getAxe()
                    local inv = LocalPlayer:FindFirstChild("Inventory")
                    if not inv then return nil end
                    return inv:FindFirstChild("Old Axe") or inv:FindFirstChildWhichIsA("Tool")
                end

                while autoTreeFarmActive do
                    local trees = getAllTrees()
                    for i = 1, #trees do
                        local t = trees[i]
                        if not autoTreeFarmActive then break end
                        if t.tree and t.tree.Parent then
                            local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                            local hrp = char:FindFirstChild("HumanoidRootPart")
                            if hrp and t.trunk then
                                hrp.CFrame = t.trunk.CFrame + t.trunk.CFrame.RightVector * 3
                                task.wait(0.25)
                                
                                local axe = getAxe()
                                if axe then
                                    if axe.Parent == LocalPlayer.Backpack then axe.Parent = char task.wait(0.15) end
                                    
                                    repeat
                                        pcall(function() axe:Activate() end)
                                        local args = { t.tree, axe, "1_8264699301", t.trunk.CFrame }
                                        pcall(function() ToolDamageObject:InvokeServer(unpack(args)) end)
                                        task.wait(1)
                                    until not t.tree.Parent or not autoTreeFarmActive
                                end
                            end
                        end
                        task.wait(0.5)
                    end
                    task.wait(2)
                end
            end)
        end
    end
})

-- Auto Hit (Screen Tap)
local autoHitActive = false
local autoHitSpeed = 0.5

AutomationTab:CreateSlider({
    Name = "Auto Hit Speed",
    Range = {0.1, 2},
    Increment = 0.05,
    CurrentValue = autoHitSpeed,
    Callback = function(val)
        autoHitSpeed = val
    end
})

AutomationTab:CreateToggle({
    Name = "Auto Hit (Screen Tap)",
    CurrentValue = false,
    Callback = function(state)
        autoHitActive = state
        if state then
            task.spawn(function()
                while autoHitActive do
                    local mouse = LocalPlayer:GetMouse()
                    UIS:SendMouseButtonEvent(mouse.X, mouse.Y, 0, true, game, 1)
                    task.wait(0.05)
                    UIS:SendMouseButtonEvent(mouse.X, mouse.Y, 0, false, game, 1)
                    task.wait(autoHitSpeed)
                end
            end)
        end
    end
})

-- ===== 3. HITBOX TAB =====
local HitboxTab = Window:CreateTab("ðŸŒ² Hitbox")
local hitboxSettings = {Wolf=false, Bunny=false, Cultist=false, Bear=false, Frog=false, Show=false, Size=10}

local function updateHitboxForModel(model)
    local root = model:FindFirstChild("HumanoidRootPart")
    if not root then return end
    local name = model.Name:lower()
    local shouldResize =
        (hitboxSettings.Wolf and (name:find("wolf") or name:find("alpha"))) or
        (hitboxSettings.Bunny and name:find("bunny")) or
        (hitboxSettings.Cultist and (name:find("cultist") or name:find("cross"))) or
        (hitboxSettings.Bear and name:find("bear")) or
        (hitboxSettings.Frog and name:find("frog"))
    if shouldResize then
        root.Size = Vector3.new(hitboxSettings.Size, hitboxSettings.Size, hitboxSettings.Size)
        root.Transparency = hitboxSettings.Show and 0.5 or 1
        root.Color = Color3.fromRGB(255, 255, 255)
        root.Material = Enum.Material.Neon
        root.CanCollide = false
    end
end

task.spawn(function()
    while true do
        for _, model in ipairs(workspace:GetDescendants()) do
            if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") then
                updateHitboxForModel(model)
            end
        end
        task.wait(2)
    end
end)

HitboxTab:CreateToggle({Name="Expand Wolf Hitbox", CurrentValue=false, Callback=function(val) hitboxSettings.Wolf=val end})
HitboxTab:CreateToggle({Name="Expand Bunny Hitbox", CurrentValue=false, Callback=function(val) hitboxSettings.Bunny=val end})
HitboxTab:CreateToggle({Name="Expand Cultist Hitbox", CurrentValue=false, Callback=function(val) hitboxSettings.Cultist=val end})
HitboxTab:CreateToggle({Name="Expand Bear Hitbox", CurrentValue=false, Callback=function(val) hitboxSettings.Bear=val end})
HitboxTab:CreateToggle({Name="Expand Frog Hitbox", CurrentValue=false, Callback=function(val) hitboxSettings.Frog=val end})
HitboxTab:CreateSlider({Name="Hitbox Size", Range={2,30}, Increment=1, CurrentValue=10, Callback=function(val) hitboxSettings.Size=val end})
HitboxTab:CreateToggle({Name="Show Hitbox (Transparency)", CurrentValue=false, Callback=function(val) hitboxSettings.Show=val end})

-- ===== 4. BRING TAB =====
local BringTab = Window:CreateTab("ðŸŒ² Bring")

-- Bring Logs
BringTab:CreateButton({
    Name = "Bring Logs",
    Callback = function()
        local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if not root then return end

        for _, item in pairs(workspace.Items:GetChildren()) do
            if item.Name:lower():find("log") and item:IsA("Model") then
                local main = item:FindFirstChildWhichIsA("BasePart")
                if main then
                    main.CFrame = root.CFrame * CFrame.new(math.random(-5,5), 0, math.random(-5,5))
                end
            end
        end
    end
})

-- Bring Meat (Raw + Cooked)
BringTab:CreateButton({
    Name = "Bring Meat (Raw + Cooked)",
    Callback = function()
        local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if not root then return end

        for _, item in pairs(workspace.Items:GetChildren()) do
            local name = item.Name:lower()
            if (name:find("meat") or name:find("cooked")) and item:IsA("Model") then
                local main = item:FindFirstChildWhichIsA("BasePart")
                if main then
                    main.CFrame = root.CFrame * CFrame.new(math.random(-5,5), 0, math.random(-5,5))
                end
            end
        end
    end
})

-- ===== 5. MISC TAB =====
local MiscTab = Window:CreateTab("ðŸŒ² Misc")

MiscTab:CreateLabel("By NyoaHub | Discord = discord.gg/s65yDmawZx")

MiscTab:CreateButton({
    Name = "Copy Discord Invite Link",
    Callback = function()
        setclipboard("https://discord.gg/s65yDmawZx")
        game:GetService("StarterGui"):SetCore("SendNotification",{Title="Discord Invite Link Copied!",Text="Successâœ…",Duration=3})
    end
})

MiscTab:CreateButton({
    Name = "CloseGui",
    Callback = function()
        Rayfield:Destroy()
    end
})
